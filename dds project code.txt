#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 100

struct Stack {
    char arr[MAX];
    int top;
};

void init(struct Stack *s) {
    s->top = -1;
}

int isEmpty(struct Stack *s) {
    return s->top == -1;
}

void push(struct Stack *s, char c) {
    if (s->top == MAX - 1) {
        printf("Stack Overflow!\n");
        return;
    }
    s->arr[++s->top] = c;
}

char pop(struct Stack *s) {
    if (isEmpty(s)) {
        return '\0'; 
    }
    return s->arr[s->top--];
}

int isMatchingPair(char open, char close) {
    return (open == '(' && close == ')') ||
           (open == '{' && close == '}') ||
           (open == '[' && close == ']');
}

int isBalanced(char *exp) {
    struct Stack s;
    init(&s);

    for (int i = 0; i < strlen(exp); i++) {
        char c = exp[i];
        
        
        if (c == '(' || c == '{' || c == '[') {
            push(&s, c);
        }
        
        else if (c == ')' || c == '}' || c == ']') {
            if (isEmpty(&s)) {
                return 0; 
            }
            char popped = pop(&s);
            if (!isMatchingPair(popped, c)) {
                return 0; 
            }
        }
    }
    
    return isEmpty(&s);
}

int main() {
    char expression[MAX];
    printf("Enter expression: ");
    scanf("%s", expression);

    if (isBalanced(expression))
        printf("Balanced\n");
    else
        printf("Not Balanced\n");

    return 0;
}